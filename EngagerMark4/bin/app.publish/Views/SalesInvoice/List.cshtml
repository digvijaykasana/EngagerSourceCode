@model PagedList.IPagedList<EngagerMark4.ApplicationCore.SOP.Entities.SalesInvoices.SalesInvoice>
@using PagedList.Mvc;
@using EngagerMark4.HtmlExtension;
@using EngagerMark4.ApplicationCore.Cris;

<div class="table-responsive">
    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th style="width:10px;"></th>
                <th class="text-left" style="font-size:13px;"><a href="/SalesInvoice/List?Customers=@ViewBag.CustomerId&Vessels=@ViewBag.VesselId&FromDate=@ViewBag.FromDate&ToDate=@ViewBag.ToDate&Status=@ViewBag.Status" class="sorter" column="WorkOrderNo" orderBy='@BaseCri.GetOrderString("WorkOrderNo",ViewBag.Column,ViewBag.OrderBy)' dataType="@BaseCri.DataType.String.ToString()">Invoice No</a></th>
                <th class="text-left" style="font-size:13px;"><a href="/SalesInvoice/List?Customers=@ViewBag.CustomerId&Vessels=@ViewBag.VesselId&FromDate=@ViewBag.FromDate&ToDate=@ViewBag.ToDate&Status=@ViewBag.Status" class="sorter" column="WorkOrderNo" orderBy='@BaseCri.GetOrderString("WorkOrderNo",ViewBag.Column,ViewBag.OrderBy)' dataType="@BaseCri.DataType.String.ToString()">Work Order No</a></th>
                <th class="text-left" style="font-size:13px;"><a href="/SalesInvoice/List?Customers=@ViewBag.CustomerId&Vessels=@ViewBag.VesselId&FromDate=@ViewBag.FromDate&ToDate=@ViewBag.ToDate&Status=@ViewBag.Status" class="sorter" column="ReferenceNoNumber" orderBy='@BaseCri.GetOrderString("ReferenceNoNumber",ViewBag.Column,ViewBag.OrderBy)' dataType="@BaseCri.DataType.Int64.ToString()">Reference No</a></th>
                <th class="text-left" style="font-size:13px;">Company</th>
                <th class="text-left" style="font-size:13px;"><a href="/SalesInvoice/List?Customers=@ViewBag.CustomerId&Vessels=@ViewBag.VesselId&FromDate=@ViewBag.FromDate&ToDate=@ViewBag.ToDate&Status=@ViewBag.Status" class="sorter" column="VesselName" orderBy='@BaseCri.GetOrderString("VesselName", ViewBag.Column, ViewBag.OrderBy)' dataType="@BaseCri.DataType.String.ToString()">Vessel</a></th>
                <th class="text-left" style="font-size:13px;">Status</th>
                <th class="text-left" style="font-size:13px;">Created</th>
                <th class="text-left" style="font-size:13px;">Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var entity in Model)
            {
            <tr>
                <td><input type="checkbox" class="invoices" name="invoiceIds" value="@entity.Id" /> </td>
                @*<td style="font-size:13px;">
                    @Html.DisplayFor(m => entity.InvoiceNo)
                </td>*@
                <td style="font-size:13px;"><a href="~/SalesInvoice/RedirectToInvoice?InvoiceId=@entity.SummaryInvoiceId"> @Html.DisplayFor(m => entity.InvoiceNo) </a></td>

                <td style="font-size:13px;">
                    @if (entity.WorkOrderId != 0)
                    {
                        <a href="~/WorkOrder/Details/@entity.WorkOrderId">
                            @Html.DisplayFor(m => entity.WorkOrderNo)
                        </a>
                    }
                </td>
                <td style="font-size:13px;"><a href="~/SalesInvoice/Details/@entity.Id?returnUrl=/SalesInvoice"> @Html.DisplayFor(m => entity.ReferenceNo)</a></td>

                <td style="font-size:13px;">@Html.DisplayFor(m => entity.Customer.Name)</td>
                <td style="font-size:13px;">@Html.DisplayFor(m => entity.VesselName)</td>
                @if (entity.Status == 0)
                {
                    <td style="background-color: @entity.StatusColor; color: black; font-size:13px;">@Html.DisplayFor(m => entity.Status)</td>
                }
                else
                {
                    <td style="background-color: @entity.StatusColor; color: white; font-size:13px;">@Html.DisplayFor(m => entity.Status)</td>
                }
                <td style="font-size:13px;">@Html.DisplayFor(m => entity.CreatedStr)</td>
                <td style="font-size:13px;" class="col-sm-1">
                    @using (Html.BeginForm("Delete", "SalesInvoice", FormMethod.Post, new { id = "form" + entity.Id }))
                    {
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@entity.Id" />
                        <a class="btn btn-info center-block" href="~/SalesInvoice/Details/@entity.Id"> <i class="fa fa-pencil fa-lg"></i></a>
                        <!--<a class="btn btn-danger" entityId="@entity.Id"> <i class="fa fa-trash fa-lg"></i></a>-->
                    }
                </td>
            </tr>
            }
        </tbody>
    </table>
</div>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("List", new { CurrentPage = page, Customers = ViewBag.CustomerId, Vessels = ViewBag.VesselId, FromDate = ViewBag.FromDate, ToDate = ViewBag.ToDate, Status = ViewBag.Status }))
@Html.Partial("_DeleteDialog")
<script src="~/Scripts/Custom/SalesInvoice/List.js"></script>
