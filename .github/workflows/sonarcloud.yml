name: SonarCloud Analysis (.NET Framework)

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-and-analyze:
    runs-on: windows-latest

    steps:
      # 1) Checkout
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2) Java for Sonar
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      # 3) Make sure MSBuild/NuGet are available
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.3

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1

      # 4) Install .NET Framework 4.6.1 Developer Pack (reference assemblies)
      - name: Install .NET Framework 4.6.1 dev pack
        run: choco install netfx-4.6.1-devpack -y

      # 5) SonarScanner for .NET
      - name: Install SonarScanner for .NET
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Add dotnet tools to PATH
        shell: bash
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      # 6) Begin analysis
      - name: SonarCloud Begin
        run: >
          dotnet sonarscanner begin
          /k:"digvijaykasana_EngagerSourceCode"
          /o:"engagersourcecode"
          /d:sonar.host.url="https://sonarcloud.io"
          /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      # 7) Find the .sln and build (PowerShell, no globs)
      - name: Restore and Build with MSBuild
        shell: pwsh
        run: |
          $sln = Get-ChildItem -Recurse -Filter *.sln | Select-Object -First 1
          if (-not $sln) { Write-Error "No .sln file found in repo"; exit 1 }
          nuget restore $sln.FullName
          msbuild $sln.FullName /t:Rebuild /p:Configuration=Release /m

      # 8) End analysis
      - name: SonarCloud End
        run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

